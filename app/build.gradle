plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'realm-android'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 33
    testCoverage {
        jacoco {
            version = "0.8.8"
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    defaultConfig {
        applicationId "com.vistony.wms"
        minSdk 26
        targetSdk 31
        versionCode 31
        versionName "1.1.32"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        //buildConfigField('String' , 'API_URL_PE_PRO', '"http://190.12.79.132:8082/pe/"')
        buildConfigField('String' , 'API_URL_PE_PRO', '"http://192.168.254.20:8082/pe/vs1.0/"') //iplocal peru
        buildConfigField('String' , 'API_URL_BO_PRO', '"http://190.12.79.132:8082/bo/vs1.0/"')
        buildConfigField('String' , 'API_URL_CL_PRO', '"http://190.12.79.132:8082/cl/vs1.0/"')
        buildConfigField('String' , 'API_URL_PY_PRO', '"http://190.12.79.132:8082/py/vs1.0/"')
        buildConfigField('String' , 'API_URL_EC_PRO', '"http://190.12.79.132:8082/ec/vs1.0/"')
        buildConfigField('String' , 'API_URL_RO_PRO', '"http://192.168.254.20:8082/rofa/vs1.0/"')
    }

    buildTypes {

      /*  debug {
            buildConfigField "String", "RealmAppId", "\"App Key\""
        }*/

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //buildConfigField "String", "RealmAppId", "\"App Key\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
//        useIR = true
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    realm {
        syncEnabled = true
    }
    ndkVersion '24.0.8215888'
}

dependencies {

    implementation 'com.google.firebase:firebase-messaging:23.0.0'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation "androidx.compose.ui:ui:1.4.0-alpha02"
    implementation "androidx.compose.material:material:1.3.1"
    //implementation "androidx.compose.runtime:runtime:1.4.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.3.1"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.1'

    implementation 'io.sentry:sentry-android:5.7.4'

    //DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    //realmn
    implementation "io.realm:realm-gradle-plugin:10.9.0"

    implementation "androidx.navigation:navigation-compose:2.6.0-alpha04"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'

    implementation "androidx.camera:camera-core:1.0.2"
    implementation "androidx.camera:camera-camera2:1.0.2"
    implementation "androidx.camera:camera-lifecycle:1.0.2"
    implementation "androidx.camera:camera-view:1.0.0-alpha32"

    //QUE EL TECLADO NO TAPE LA PANTALLA
    implementation "com.google.accompanist:accompanist-insets:0.24.1-alpha"

    //Barcode
    implementation 'com.google.mlkit:barcode-scanning:17.0.2'
    //Camera Permission
    implementation "com.google.accompanist:accompanist-permissions:0.19.0"

    implementation 'com.google.android.material:material:1.7.0'

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    //realmn mongoDB
    //implementation("io.realm.kotlin:library-base:1.0.0")

    implementation("com.google.guava:guava:31.0.1-android")
    // To use CallbackToFutureAdapter
    implementation("androidx.concurrent:concurrent-futures:1.1.0")
    // Kotlin
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-guava:1.6.4")

    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.3'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.3.1"
    debugImplementation "androidx.compose.ui:ui-tooling:1.3.1"


    //Stetho
    debugImplementation 'com.facebook.stetho:stetho:1.5.1'
    debugImplementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'

    //PRUEBAS UNITARIAS
//Permite realizar pruebas unitarias
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//JUNIT
    testImplementation("junit:junit:$junit")
    androidTestImplementation "androidx.test.ext:junit-ktx:$test_ext_junit"
    androidTestImplementation "androidx.test.ext:junit:$test_ext_junit"
//Mockito
    testImplementation 'org.mockito:mockito-core:3.12.4'
    androidTestImplementation 'org.mockito:mockito-android:3.12.4'
    testImplementation 'org.robolectric:robolectric:4.11.1'
//testImplementation 'org.robolectric:robolectric:3.3.2'
    debugImplementation("androidx.compose.ui:ui-test-manifest:$compose_version")
    debugImplementation 'androidx.fragment:fragment-testing:1.2.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    def jacocoVersion = "0.8.8"
    testImplementation "org.jacoco:org.jacoco.core:$jacocoVersion"
    testImplementation "org.jacoco:org.jacoco.report:$jacocoVersion"
}